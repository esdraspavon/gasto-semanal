{"version":3,"sources":["components/Header.js","components/Form.js","components/Expend.js","components/List.js","components/Estimated.js","helper.js","components/Remaining.js","components/EstimatedControl.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","title","Form","nameRef","React","createRef","priceRef","makeExpend","e","preventDefault","expend","name","_this","current","value","price","console","log","currentTarget","reset","onSubmit","this","className","type","placeholder","ref","Component","Expend","_this$props$expend","List","Object","keys","expends","map","key","components_Expend","Estimated","estimated","validarPresupuesto","presupuesto","totalPresupuesto","parseInt","Remaining","restante","remaining","EstimatedControl","Fragment","components_Estimated","components_Remaining","App","state","obtenerPresupuesto","prompt","resultado","setState","objectSpread","concat","Date","now","substractEstimated","substract","Number","components_Header","components_Form","components_List","components_EstimatedControl","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAUeA,SARA,SAAAC,GACb,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,UAAKH,EAAMI,UCyDFC,6MAzDbC,QAAUC,IAAMC,cAChBC,SAAWF,IAAMC,cACjBE,WAAa,SAAAC,GAEXA,EAAEC,iBAGF,IAAMC,EAAS,CACbC,KAAMC,EAAKT,QAAQU,QAAQC,MAC3BC,MAAOH,EAAKN,SAASO,QAAQC,OAE/BE,QAAQC,IAAIP,GAGZE,EAAKf,MAAMU,WAAWG,GAEtBF,EAAEU,cAAcC,iFAIhB,OACErB,EAAAC,EAAAC,cAAA,QAAMoB,SAAUC,KAAKd,YACnBT,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,SACbxB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEsB,UAAU,eACVC,KAAK,OACLC,YAAY,iBACZC,IAAKJ,KAAKlB,WAIdL,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,SACbxB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACEsB,UAAU,eACVC,KAAK,OACLC,YAAY,UACZC,IAAKJ,KAAKf,YAIdR,EAAAC,EAAAC,cAAA,SACEsB,UAAU,8BACVC,KAAK,SACLT,MAAM,oBAhDGY,aCgBJC,mLAfJ,IAAAC,EACiBP,KAAKxB,MAAMa,OAA3BC,EADDiB,EACCjB,KAAMI,EADPa,EACOb,MACd,OACEjB,EAAAC,EAAAC,cAAA,MAAIsB,UAAU,UACZxB,EAAAC,EAAAC,cAAA,SACGW,EADH,IACSb,EAAAC,EAAAC,cAAA,QAAMsB,UAAU,SAAhB,IAA0BP,YANtBW,aCeNG,mLAdJ,IAAAjB,EAAAS,KACP,OACEvB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,qBACbxB,EAAAC,EAAAC,cAAA,qBACC8B,OAAOC,KAAKV,KAAKxB,MAAMmC,SAASC,IAAI,SAAAC,GAAG,OACtCpC,EAAAC,EAAAC,cAACmC,EAAD,CAAQD,IAAKA,EAAKxB,OAAQE,EAAKf,MAAMmC,QAAQE,eANpCR,aCYJU,mLAXX,OACEtC,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,uBACbxB,EAAAC,EAAAC,cAAA,2BAAmBqB,KAAKxB,MAAMwC,mBAJdX,aCFXY,EAAqB,SAAAC,GAChC,IAAIC,EAAmBC,SAASF,EAAa,KAAO,EAEpD,OAAIC,EAAmB,GACdA,GCcIE,mLAbX,IDK+BH,EAAaI,ECLtCN,EAAYhB,KAAKxB,MAAMwC,UACvBO,EAAYvB,KAAKxB,MAAM+C,UAC7B,OACE9C,EAAAC,EAAAC,cAAA,OAAKsB,WDEwBiB,ECFMF,EDEOM,ECFIC,EDK9CL,EAAc,EAAII,EACZ,qBACCJ,EAAc,EAAII,EACnB,sBAEA,8BCTJ7C,EAAAC,EAAAC,cAAA,wBAAgB4C,WANAlB,aCoBTmB,mLAhBX,OACE/C,EAAAC,EAAAC,cAACF,EAAAC,EAAM+C,SAAP,KACEhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAWV,UAAWhB,KAAKxB,MAAMwC,YACjCvC,EAAAC,EAAAC,cAACgD,EAAD,CACEX,UAAWhB,KAAKxB,MAAMwC,UACtBO,UAAWvB,KAAKxB,MAAM+C,oBAPDlB,aC4EhBuB,6MAxEbC,MAAQ,CACNb,UAAW,EACXO,UAAW,EACXZ,QAAS,MAOXmB,mBAAqB,WACnB,IAAIP,EAAYQ,OAAO,2BACnBC,EAAYf,EAAmBM,GAC/BS,EACFzC,EAAK0C,SAAS,CAAEjB,UAAWgB,EAAWT,UAAWS,IAEjDzC,EAAKuC,wBAKT5C,WAAa,SAAAG,GAEX,IAAMsB,EAAOF,OAAAyB,EAAA,EAAAzB,CAAA,GAAQlB,EAAKsC,MAAMlB,SAGhCA,EAAO,SAAAwB,OAAUC,KAAKC,QAAWhD,EAGjCE,EAAK+C,mBAAmBjD,EAAOK,OAG/BH,EAAK0C,SAAS,CAAEtB,eAIlB2B,mBAAqB,SAAA5C,GAEnB,IAAI6C,EAAYC,OAAO9C,GAGnB6B,EAAYhC,EAAKsC,MAAMN,UAE3BA,GAAagB,EAGbhD,EAAK0C,SAAS,CAAEV,kGAvChBvB,KAAK8B,sDA2CL,OACErD,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,iBACbxB,EAAAC,EAAAC,cAAC8D,EAAD,CAAQ7D,MAAM,kBACdH,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,iCACbxB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,OACbxB,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,mBACbxB,EAAAC,EAAAC,cAAC+D,EAAD,CAAMxD,WAAYc,KAAKd,cAEzBT,EAAAC,EAAAC,cAAA,OAAKsB,UAAU,mBACbxB,EAAAC,EAAAC,cAACgE,EAAD,CAAMhC,QAASX,KAAK6B,MAAMlB,UAC1BlC,EAAAC,EAAAC,cAACiE,EAAD,CACE5B,UAAWhB,KAAK6B,MAAMb,UACtBO,UAAWvB,KAAK6B,MAAMN,uBA/DpBlB,aCIEwC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1E,EAAAC,EAAAC,cAACyE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.77cb8517.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = props => {\n  return (\n    <header>\n      <h1>{props.title}</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Form extends Component {\n  // Refs para el formulario\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  makeExpend = e => {\n    //Prevenir el default\n    e.preventDefault();\n\n    //crear el objeto con los datos\n    const expend = {\n      name: this.nameRef.current.value,\n      price: this.priceRef.current.value\n    };\n    console.log(expend);\n\n    //agregarlo y enviarlo por props\n    this.props.makeExpend(expend);\n    //Resetear el formulario\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.makeExpend}>\n        <h2>Agrega tus gastos aqui</h2>\n        <div className=\"campo\">\n          <label>Nombre Gasto</label>\n          <input\n            className=\"u-full-width\"\n            type=\"text\"\n            placeholder=\"Ej. Transporte\"\n            ref={this.nameRef}\n          />\n        </div>\n\n        <div className=\"campo\">\n          <label>Cantidad</label>\n          <input\n            className=\"u-full-width\"\n            type=\"text\"\n            placeholder=\"Ej. 300\"\n            ref={this.priceRef}\n          />\n        </div>\n\n        <input\n          className=\"button-primary u-full-width\"\n          type=\"submit\"\n          value=\"Agregar\"\n        />\n      </form>\n    );\n  }\n}\n\nForm.propTypes = {\n  makeExpend: PropTypes.func.isRequired\n};\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Expend extends Component {\n  render() {\n    const { name, price } = this.props.expend;\n    return (\n      <li className=\"gastos\">\n        <p>\n          {name} <span className=\"gasto\">${price}</span>\n        </p>\n      </li>\n    );\n  }\n}\nExpend.propTypes = {\n  expend: PropTypes.object.isRequired\n};\n\nexport default Expend;\n","import React, { Component } from \"react\";\nimport Expend from \"./Expend\";\nimport PropTypes from \"prop-types\";\nclass List extends Component {\n  render() {\n    return (\n      <div className=\"gastos-realizados\">\n        <h2>Listado</h2>\n        {Object.keys(this.props.expends).map(key => (\n          <Expend key={key} expend={this.props.expends[key]} />\n        ))}\n      </div>\n    );\n  }\n}\nList.propTypes = {\n  expends: PropTypes.object.isRequired\n};\nexport default List;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nclass Estimated extends Component {\n  render() {\n    return (\n      <div className=\"alert alert-primary\">\n        <p>Presupuesto: $ {this.props.estimated}</p>\n      </div>\n    );\n  }\n}\nEstimated.propTypes = {\n  estimated: PropTypes.number.isRequired\n};\n\nexport default Estimated;\n","export const validarPresupuesto = presupuesto => {\n  let totalPresupuesto = parseInt(presupuesto, 10) || 0;\n\n  if (totalPresupuesto > 0) {\n    return totalPresupuesto;\n  } else {\n    return false;\n  }\n};\n\nexport const revisarPresupuesto = (presupuesto, restante) => {\n  let clase;\n  // Comprobar el 25%\n  if (presupuesto / 4 > restante) {\n    clase = \"alert alert-danger\";\n  } else if (presupuesto / 2 > restante) {\n    clase = \"alert alert-warning\";\n  } else {\n    clase = \"alert alert alert-success\";\n  }\n  return clase;\n};\n","import React, { Component } from \"react\";\nimport { revisarPresupuesto } from \"../helper\";\nimport PropTypes from \"prop-types\";\nclass Remaining extends Component {\n  render() {\n    const estimated = this.props.estimated;\n    const remaining = this.props.remaining;\n    return (\n      <div className={revisarPresupuesto(estimated, remaining)}>\n        <p>Restante: $ {remaining}</p>\n      </div>\n    );\n  }\n}\nRemaining.propTypes = {\n  estimated: PropTypes.number.isRequired,\n  remaining: PropTypes.number.isRequired\n};\nexport default Remaining;\n","import React, { Component } from \"react\";\nimport Estimated from \"./Estimated\";\nimport Remaining from \"./Remaining\";\nimport PropTypes from \"prop-types\";\n\nclass EstimatedControl extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Estimated estimated={this.props.estimated} />\n        <Remaining\n          estimated={this.props.estimated}\n          remaining={this.props.remaining}\n        />\n      </React.Fragment>\n    );\n  }\n}\nEstimatedControl.propTypes = {\n  estimated: PropTypes.number.isRequired,\n  remaining: PropTypes.number.isRequired\n};\n\nexport default EstimatedControl;\n","import React, { Component } from \"react\";\nimport \"../css/App.css\";\nimport Header from \"./Header\";\nimport Form from \"./Form\";\nimport List from \"./List\";\nimport EstimatedControl from \"./EstimatedControl\";\nimport { validarPresupuesto } from \"../helper\";\n\nclass App extends Component {\n  state = {\n    estimated: 0,\n    remaining: 0,\n    expends: {}\n  };\n\n  componentDidMount() {\n    this.obtenerPresupuesto();\n  }\n\n  obtenerPresupuesto = () => {\n    let remaining = prompt(\"Cual es el presupuesto?\");\n    let resultado = validarPresupuesto(remaining);\n    if (resultado) {\n      this.setState({ estimated: resultado, remaining: resultado });\n    } else {\n      this.obtenerPresupuesto();\n    }\n  };\n\n  //Agregar un nuevo gasto al state\n  makeExpend = expend => {\n    //tomar una copia del state actual\n    const expends = { ...this.state.expends };\n\n    //agregar al gasto al objeto del state\n    expends[`expend${Date.now()}`] = expend;\n\n    //Restar al presupuesto\n    this.substractEstimated(expend.price);\n\n    //ponerlo en el state\n    this.setState({ expends });\n  };\n\n  //Restart del presupuesto cuando un gasto se crea\n  substractEstimated = price => {\n    //Leer el gasto\n    let substract = Number(price);\n\n    //Tomar una copia del state actual\n    let remaining = this.state.remaining;\n    //La restamos\n    remaining -= substract;\n\n    //Agregamos el nuevo state\n    this.setState({ remaining });\n  };\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Header title=\"Gasto semanal\" />\n        <div className=\"contenido-principal contenido\">\n          <div className=\"row\">\n            <div className=\"one-half column\">\n              <Form makeExpend={this.makeExpend} />\n            </div>\n            <div className=\"one-half column\">\n              <List expends={this.state.expends} />\n              <EstimatedControl\n                estimated={this.state.estimated}\n                remaining={this.state.remaining}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}